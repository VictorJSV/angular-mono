{"ast":null,"code":"import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\nexport function repeat(countOrConfig) {\n  var _a;\n\n  var count = Infinity;\n  var delay;\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      _a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay;\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0 ? function () {\n    return EMPTY;\n  } : operate(function (source, subscriber) {\n    var soFar = 0;\n    var sourceSub;\n\n    var resubscribe = function () {\n      sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n      sourceSub = null;\n\n      if (delay != null) {\n        var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n        var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n          notifierSubscriber_1.unsubscribe();\n          subscribeToSource();\n        });\n        notifier.subscribe(notifierSubscriber_1);\n      } else {\n        subscribeToSource();\n      }\n    };\n\n    var subscribeToSource = function () {\n      var syncUnsub = false;\n      sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n        if (++soFar < count) {\n          if (sourceSub) {\n            resubscribe();\n          } else {\n            syncUnsub = true;\n          }\n        } else {\n          subscriber.complete();\n        }\n      }));\n\n      if (syncUnsub) {\n        resubscribe();\n      }\n    };\n\n    subscribeToSource();\n  });\n} //# sourceMappingURL=repeat.js.map","map":{"version":3,"names":["EMPTY","operate","createOperatorSubscriber","innerFrom","timer","repeat","countOrConfig","_a","count","Infinity","delay","source","subscriber","soFar","sourceSub","resubscribe","unsubscribe","notifier","notifierSubscriber_1","subscribeToSource","subscribe","syncUnsub","undefined","complete"],"sources":["/Users/victorsan/Documents/htdocs/wabi-demo-monorepo/node_modules/rxjs/dist/esm5/internal/operators/repeat.js"],"sourcesContent":["import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\nexport function repeat(countOrConfig) {\n    var _a;\n    var count = Infinity;\n    var delay;\n    if (countOrConfig != null) {\n        if (typeof countOrConfig === 'object') {\n            (_a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay);\n        }\n        else {\n            count = countOrConfig;\n        }\n    }\n    return count <= 0\n        ? function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var soFar = 0;\n            var sourceSub;\n            var resubscribe = function () {\n                sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n                sourceSub = null;\n                if (delay != null) {\n                    var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n                    var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n                        notifierSubscriber_1.unsubscribe();\n                        subscribeToSource();\n                    });\n                    notifier.subscribe(notifierSubscriber_1);\n                }\n                else {\n                    subscribeToSource();\n                }\n            };\n            var subscribeToSource = function () {\n                var syncUnsub = false;\n                sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n                    if (++soFar < count) {\n                        if (sourceSub) {\n                            resubscribe();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.complete();\n                    }\n                }));\n                if (syncUnsub) {\n                    resubscribe();\n                }\n            };\n            subscribeToSource();\n        });\n}\n//# sourceMappingURL=repeat.js.map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAO,SAASC,MAAT,CAAgBC,aAAhB,EAA+B;EAClC,IAAIC,EAAJ;;EACA,IAAIC,KAAK,GAAGC,QAAZ;EACA,IAAIC,KAAJ;;EACA,IAAIJ,aAAa,IAAI,IAArB,EAA2B;IACvB,IAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;MAClCC,EAAE,GAAGD,aAAa,CAACE,KAAnB,EAA0BA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBE,QAAhB,GAA2BF,EAA7D,EAAiEG,KAAK,GAAGJ,aAAa,CAACI,KAAxF;IACH,CAFD,MAGK;MACDF,KAAK,GAAGF,aAAR;IACH;EACJ;;EACD,OAAOE,KAAK,IAAI,CAAT,GACD,YAAY;IAAE,OAAOR,KAAP;EAAe,CAD5B,GAEDC,OAAO,CAAC,UAAUU,MAAV,EAAkBC,UAAlB,EAA8B;IACpC,IAAIC,KAAK,GAAG,CAAZ;IACA,IAAIC,SAAJ;;IACA,IAAIC,WAAW,GAAG,YAAY;MAC1BD,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACE,WAAV,EAAtD;MACAF,SAAS,GAAG,IAAZ;;MACA,IAAIJ,KAAK,IAAI,IAAb,EAAmB;QACf,IAAIO,QAAQ,GAAG,OAAOP,KAAP,KAAiB,QAAjB,GAA4BN,KAAK,CAACM,KAAD,CAAjC,GAA2CP,SAAS,CAACO,KAAK,CAACG,KAAD,CAAN,CAAnE;QACA,IAAIK,oBAAoB,GAAGhB,wBAAwB,CAACU,UAAD,EAAa,YAAY;UACxEM,oBAAoB,CAACF,WAArB;UACAG,iBAAiB;QACpB,CAHkD,CAAnD;QAIAF,QAAQ,CAACG,SAAT,CAAmBF,oBAAnB;MACH,CAPD,MAQK;QACDC,iBAAiB;MACpB;IACJ,CAdD;;IAeA,IAAIA,iBAAiB,GAAG,YAAY;MAChC,IAAIE,SAAS,GAAG,KAAhB;MACAP,SAAS,GAAGH,MAAM,CAACS,SAAP,CAAiBlB,wBAAwB,CAACU,UAAD,EAAaU,SAAb,EAAwB,YAAY;QACrF,IAAI,EAAET,KAAF,GAAUL,KAAd,EAAqB;UACjB,IAAIM,SAAJ,EAAe;YACXC,WAAW;UACd,CAFD,MAGK;YACDM,SAAS,GAAG,IAAZ;UACH;QACJ,CAPD,MAQK;UACDT,UAAU,CAACW,QAAX;QACH;MACJ,CAZoD,CAAzC,CAAZ;;MAaA,IAAIF,SAAJ,EAAe;QACXN,WAAW;MACd;IACJ,CAlBD;;IAmBAI,iBAAiB;EACpB,CAtCQ,CAFb;AAyCH,C,CACD"},"metadata":{},"sourceType":"module"}